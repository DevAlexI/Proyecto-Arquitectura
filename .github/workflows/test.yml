name: Tests--CI-CD

'on':
  push:
    branches:  
      - Main
      - Arch-Dev
  pull_request:
    branches:
      - Main

jobs:
  test:
    name: 'Nodejs v${{ matrix.node }}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 14
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '${{ matrix.node }}'
      - uses: actions/checkout@v2
      - name: 'Cache node_modules'
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-v${{ matrix.node }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-v${{ matrix.node }}-
      - name: Instalando Mocha
        run: npm install -g mocha
      - name: Instalando dependencias
        run: npm install
      - name: Ejecuta los test de nuestro proyecto
        run: npm run test


  push_to_Docker_Hub:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # build docker image and push to docker hub
      # only if the app build and test successfully
      needs: [test]

      steps:
        - name: checkout repo
          uses: actions/checkout@v2

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1
      
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
      
        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/proyecto-arquitectura:latest
          
        - name: Run the image in a container
          uses: addnab/docker-run-action@v3
          with:
            image: ${{ secrets.DOCKERHUB_USERNAME }}/proyecto-arquitectura:latest
            run: |
              echo "runing the docker image"
              echo "Testing the nodejs  app endpoints"
              echo ${{ steps.docker_build.outputs.digest }}